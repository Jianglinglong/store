<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.team.store.mapper.BackOrderMapper" >
  <resultMap id="BaseResultMap" type="com.team.store.po.BackOrder" >
    <id column="BACK_ID" property="backId" jdbcType="DECIMAL" />
    <result column="START_TIME" property="startTime" jdbcType="DATE" />
    <result column="ORDER_ID" property="orderId" jdbcType="DECIMAL" />
    <result column="ORDER_STATE" property="orderState" jdbcType="DECIMAL" />
    <result column="ORDER_LOGISTICS" property="orderLogistics" jdbcType="DECIMAL" />
    <result column="BACK_MONEY" property="backMoney" jdbcType="DECIMAL" />
    <result column="USER_ID" property="userId" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    BACK_ID, START_TIME, ORDER_ID, ORDER_STATE, ORDER_LOGISTICS, BACK_MONEY, USER_ID
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.team.store.po.BackOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from T_BACK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from T_BACK
    where BACK_ID = #{backId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from T_BACK
    where BACK_ID = #{backId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.team.store.po.BackOrderExample" >
    delete from T_BACK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.team.store.po.BackOrder">
    <selectKey keyProperty="backId" resultType="java.lang.Integer" order="AFTER">
      SELECT SEQ_BACK_ORDER_ID.CURRVAL FROM dual
    </selectKey>
    insert into T_BACK (BACK_ID, START_TIME, ORDER_ID, 
      ORDER_STATE, ORDER_LOGISTICS, BACK_MONEY, 
      USER_ID)
    values (SEQ_BACK_ORDER_ID.NEXTVAL, #{startTime,jdbcType=DATE}, #{orderId,jdbcType=DECIMAL},
      #{orderState,jdbcType=DECIMAL}, #{orderLogistics,jdbcType=DECIMAL}, #{backMoney,jdbcType=DECIMAL}, 
      #{userId,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.team.store.po.BackOrder" >
    <selectKey keyProperty="backId" resultType="java.lang.Integer" order="AFTER">
      SELECT SEQ_BACK_ORDER_ID.CURRVAL FROM dual
    </selectKey>
    insert into T_BACK
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="backId != null" >
        BACK_ID,
      </if>
      <if test="startTime != null" >
        START_TIME,
      </if>
      <if test="orderId != null" >
        ORDER_ID,
      </if>
      <if test="orderState != null" >
        ORDER_STATE,
      </if>
      <if test="orderLogistics != null" >
        ORDER_LOGISTICS,
      </if>
      <if test="backMoney != null" >
        BACK_MONEY,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="backId != null" >
        SEQ_BACK_ORDER_ID.NEXTVAL,
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=DATE},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=DECIMAL},
      </if>
      <if test="orderState != null" >
        #{orderState,jdbcType=DECIMAL},
      </if>
      <if test="orderLogistics != null" >
        #{orderLogistics,jdbcType=DECIMAL},
      </if>
      <if test="backMoney != null" >
        #{backMoney,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.team.store.po.BackOrderExample" resultType="java.lang.Integer" >
    select count(*) from T_BACK
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_BACK
    <set >
      <if test="record.backId != null" >
        BACK_ID = #{record.backId,jdbcType=DECIMAL},
      </if>
      <if test="record.startTime != null" >
        START_TIME = #{record.startTime,jdbcType=DATE},
      </if>
      <if test="record.orderId != null" >
        ORDER_ID = #{record.orderId,jdbcType=DECIMAL},
      </if>
      <if test="record.orderState != null" >
        ORDER_STATE = #{record.orderState,jdbcType=DECIMAL},
      </if>
      <if test="record.orderLogistics != null" >
        ORDER_LOGISTICS = #{record.orderLogistics,jdbcType=DECIMAL},
      </if>
      <if test="record.backMoney != null" >
        BACK_MONEY = #{record.backMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_BACK
    set BACK_ID = #{record.backId,jdbcType=DECIMAL},
      START_TIME = #{record.startTime,jdbcType=DATE},
      ORDER_ID = #{record.orderId,jdbcType=DECIMAL},
      ORDER_STATE = #{record.orderState,jdbcType=DECIMAL},
      ORDER_LOGISTICS = #{record.orderLogistics,jdbcType=DECIMAL},
      BACK_MONEY = #{record.backMoney,jdbcType=DECIMAL},
      USER_ID = #{record.userId,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.store.po.BackOrder" >
    update T_BACK
    <set >
      <if test="startTime != null" >
        START_TIME = #{startTime,jdbcType=DATE},
      </if>
      <if test="orderId != null" >
        ORDER_ID = #{orderId,jdbcType=DECIMAL},
      </if>
      <if test="orderState != null" >
        ORDER_STATE = #{orderState,jdbcType=DECIMAL},
      </if>
      <if test="orderLogistics != null" >
        ORDER_LOGISTICS = #{orderLogistics,jdbcType=DECIMAL},
      </if>
      <if test="backMoney != null" >
        BACK_MONEY = #{backMoney,jdbcType=DECIMAL},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=DECIMAL},
      </if>
    </set>
    where BACK_ID = #{backId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.store.po.BackOrder" >
    update T_BACK
    set START_TIME = #{startTime,jdbcType=DATE},
      ORDER_ID = #{orderId,jdbcType=DECIMAL},
      ORDER_STATE = #{orderState,jdbcType=DECIMAL},
      ORDER_LOGISTICS = #{orderLogistics,jdbcType=DECIMAL},
      BACK_MONEY = #{backMoney,jdbcType=DECIMAL},
      USER_ID = #{userId,jdbcType=DECIMAL}
    where BACK_ID = #{backId,jdbcType=DECIMAL}
  </update>
</mapper>